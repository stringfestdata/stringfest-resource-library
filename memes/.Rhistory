facet_wrap( ~sex)
t.test(rcc ~ sex, data = ais)
ais %>%
select(-c(sex, sport)) %>%
cor()
ggplot(data = ais, aes(x = ht, y = wt)) +
geom_point()
ais_reg <- lm(wt ~ ht, data = ais)
summary(ais_reg)
summary(lm(ht ~ wt, data = ais))
ais_reg <- lm(wt ~ ht, data = ais)
summary(ais_reg)
ais_reg <- lm(wt ~ ht, data = ais)
summary(ais_reg)
ais_reg <- lm(wt ~ ht, data = ais)
summary(ais_reg)
ais_reg <- lm(wt ~ ht, data = ais)
summary(ais_reg)
set.seed(1234)
ais_split <- initial_split(ais)
ais_train <- training(ais)
ais_train <- training(ais_split)
ais_test <- testing(ais_split)
dim(ais_train)
dim(ais_test)
lm_spec <- linear_reg()
lm_fit <- lm_spec %>%
fit(wt ~ ht, data = ais)
lm_fit <- lm_spec %>%
fit(wt ~ ht, data = ais_train)
ais_pred <- lm_fit %>%
predict(new_data = ais_test) %>%
bind_cols(ais_test)
ais_pred
library(tidyverse)
library(plotluck)
install.packages('plotluck')
library(plotluck)
library(broom)
devtools::install_github("westland/auditanalytics")
library(auditanalytics)
industry_stats <- read.csv
industry_stats <- read.csv
(system.file("extdata", "ch_2_dataset.csv", package = "auditanalytics", mustWork = TRUE"))
summary(industry_stats)
industry_stats <- read.csv(system.file("extdata", "ch_2_dataset.csv", package = "auditanalytics", mustWork = TRUE"))
summary(industry_stats)
industry_stats <- read.csv(system.file("extdata", "ch_2_dataset.csv", package = "auditanalytics", mustWork = TRUE))
summary(industry_stats)
mustWork = TRUE))
sox_stats <-
read.csv(
(system.file("extdata", "ch_2_data_types.csv", package = "auditanalytics",
mustWork = TRUE))
(system.file("extdata", "ch_2_data_types.csv", package = "auditanalytics", mustWork = TRUE))
View(sox_stats)
sox_stats <-read.csv((system.file("extdata", "ch_2_data_types.csv", package = "auditanalytics", mustWork = TRUE))
View(sox_stats)
sox_stats <-read.csv((system.file("extdata", "ch_2_data_types.csv", package = "auditanalytics", mustWork = TRUE))
View(sox_stats)
sox_stats
sox_stats <- read.csv((system.file("extdata", "ch_2_data_types.csv", package = "auditanalytics", mustWork = TRUE))
View(sox_stats)
sox_stats
library(edgarWebR)
install.packages('edgarWebR')
library(edgarWebR)
company_details('AAPL')
company_filings("AAPL", type = "10-K", count = 10)
library(edgar)
install.packages('edgar')
browseVignettes(package='edgar')
library(edgar)
browseVignettes(package='edgar')
library(edgarWebR)
filings <- company_filings("WMT", type = "8-K", count = 100)
EDGARWEBR_USER_AGENT <- Sys.getenv('xxxx')
library(edgarWebR)
filings <- company_filings("WMT", type = "8-K", count = 100)
filings <- company_filings("WMT", type = "8-K", count = 100)
library(edgarWebR)
EDGARWEBR_USER_AGENT <- Sys.getenv('xxxx')
filings <- company_filings("WMT", type = "8-K", count = 100)
filings <- company_filings("WMT", type = "8-K", count = 100)
library(edgarWebR)
filings <- company_filings("WMT", type = "8-K", count = 100)
Sys.setenv('xxxx')
EDGARWEBR_USER_AGENT <- Sys.getenv('xxxx')
html_retry <-  function(url1,   N.TRIES = 3L) {
require(rvest)
N.TRIES <- as.integer(N.TRIES)
stopifnot(length(N.TRIES) == 1L, !is.na(N.TRIES))
stopifnot(N.TRIES > 0L)
while (N.TRIES > 0L) {
result <- tryCatch(read_html(
x = url1
), error = identity)
if (!inherits(result, "error")) {
break
}
## Wait 0.5 seconds
Sys.sleep(0.5)
N.TRIES <- N.TRIES - 1L
}
if (N.TRIES == 0L) {
stop(
"'html_retry()' failed:",
"\n  URL: ", url1,
"\n  error: ", conditionMessage(result)
)
}
invisible(result)
html_retry <-  function(url1,   N.TRIES = 3L) {
require(rvest)
N.TRIES <- as.integer(N.TRIES)
stopifnot(length(N.TRIES) == 1L, !is.na(N.TRIES))
stopifnot(N.TRIES > 0L)
while (N.TRIES > 0L) {
result <- tryCatch(read_html(
x = url1
), error = identity)
if (!inherits(result, "error")) {
break
}
## Wait 0.5 seconds
Sys.sleep(0.5)
N.TRIES <- N.TRIES - 1L
}
if (N.TRIES == 0L) {
stop(
"'html_retry()' failed:",
"\n  URL: ", url1,
"\n  error: ", conditionMessage(result)
)
}
invisible(result)
}
library(finreportr)
library(finreportr)
library(finreportr)
install.packages('finreportr')
library(finreportr)
tesla_co <- CompanyInfo("TSLA")
tesla_ann <- AnnualReports("TSLA")
tesla_inc <- GetIncome("TSLA", 2018)
tesla_bs <- GetBalanceSheet("TSLA", 2018)
tesla_cf <- GetCashFlow("TSLA", 2018)
tesla_cf <- GetCashFlow("TSLA", 2021)
tesla_cf
tesla_cf <- GetCashFlow("TSLA", 2021)
tesla_cf <- GetCashFlow("TSLA", 2020)
tesla_cf
tesla_co <- CompanyInfo("TSLA")
tesla_ann <- AnnualReports("TSLA")
tesla_inc <- GetIncome("TSLA", 2018)
tesla_bs <- GetBalanceSheet("TSLA", 2018)
tesla_cf <- GetCashFlow("TSLA", 2020)
browseVignettes(package='finreportr')
head(GetIncome("TSLA", 2015))
1 + 1
1:50
sqrt(25)
sqrt(25)
1 - 2 ^ 4
?plot
plot(x <- sort(rnorm(47)), type = "s", main = "plot(x, type = \"s\")")
points(x, cex = .5, col = "dark red")
a <- c(1, 2, 3)
a * 2
library(plotly)
install.packages('plotly')
library(plotly)
install.packages('NbClust')
install.packages('Redmonder')
remove.packages('mclust')
library(readxl)
ispy <- read_excel("GitHub/aina-getting-started-for-researchers/ispy.xlsx")
View(ispy)
summary(ispy)
library(readxl)
loans <- read_excel("C:/Users/User/Downloads/aina-getting-started-accountants-main/loans.xlsx")
View(loans)
summary(loans)
library(reprex)
library(reprex)
library(reprex)
library(ggplot2)
ggplot(data = iris, aes(x = Sepal.Length, bins = 20)) +
geom_histogram()
reprex()
reprex()
library(reprex)
library(ggplot2)
ggplot(data = iris, aes(x = Sepal.Length, bins = 20)) +
geom_histogram()
reprex()
reprex()
ggplot(data = iris, aes(x = Sepal.Length)) +
geom_histogram(bins = 20)
reprex()
a <- 2
a
a ^ 2
abs(a)
a > 3
a < 1
a > 1
a = 3
a == 3
b <- sqrt(a)
B
b
ABS(25)
a <- 2.3
b <- 'Hello, world'
b <- 'Hello, world'
c <- TRUE
d <- FALSE
class(a)
class(b)
class(c)
class(d)
sqrt(b)
toupper(b)
c * d
c + d
a <- c(1, 2, 3)
a
b <- c(2, 3, 'boo!')
b
class(b)
a * 2
my_long_vector <- 5:84
my_long_vector
my_long_vector[3]
sqrt(my_long_vector)
data()
iris
View(iris)
head(iris)
iris[2, 4]
iris[2:4, 1:2]
iris$Species
is.vector(iris$Species)
summary(iris)
library(skimr)
skim(iris)
iris$Species
unique(iris$Species)
iris$Species
unique(iris$Species)
orders <- c('grande', 'venti', 'tall', 'venti', 'grande', 'tall')
order
orders
unique(orders)
new_orders_factor <- factor(orders, levels=c('tall', 'grande', 'venti'))
is.factor(new_orders_factor)
is.factor(orders)
levels(new_orders_factor)
library(Ecda)
library(Ecdat)
library(tid)
library(tidyverse)
head(Housing)
housing <- Housing
ggplot(data = housing, aes(x = prefarea, y = price)) +
geom_boxplot()
ggplot(data = housing, aes(x = prefarea, y = price, fill = prefarea)) +
geom_boxplot()
ggplot(data = housing, aes(x = prefarea, y = price, fill = prefarea))+
geom_boxplot() +
labs(x = 'Preferred area?', y = 'Price', title = 'Distribution of sales price by preferred area')
ggplot(data = housing, aes(x = prefarea, y = price, fill = prefarea))+
geom_boxplot() +
labs(x = 'Preferred area?', y = 'Price', title = 'Distribution of sales price by preferred area') +
scale_fill_brewer(palette = 'Blues')
ggplot(data = housing, aes(x = prefarea, y = price, fill = prefarea))+
geom_boxplot() +
labs(x = 'Preferred area?', y = 'Price', title = 'Distribution of sales price by preferred area') +
scale_fill_brewer(palette = 'Blues') +
theme_dark()
ggplot(data = housing, aes(x = prefarea, y = price, fill = prefarea))+
geom_boxplot() +
labs(x = 'Preferred area?', y = 'Price', title = 'Distribution of sales price by preferred area') +
scale_fill_brewer(palette = 'Blues') +
theme_gray()
ggplot(data = housing, aes(x = prefarea, y = price, fill = prefarea))+
geom_boxplot() +
labs(x = 'Preferred area?', y = 'Price', title = 'Distribution of sales price by preferred area') +
scale_fill_brewer(palette = 'Blues') +
theme_classic()
library(tidymodels)
?control_resamples
fit_resamples()
?fit_resamples
library(tidymodels)
library(tidyverse)
library(Ecdat)
library(readxl)
dataset <- read_excel(NULL)
View(dataset)
remove.packages('readxl')
library(readxl)
retail <- read_excel("C:/Users/User/Downloads/aina-marketing-foundations-main/retail.xlsx")
View(retail)
abs(-100)
retail
t.test(sales_amt ~ store_type, data = retail)
library(report)
report(t.test(sales_amt ~ store_type, data = retail))
# File > Import dataset
library(readxl)
housing <- read_excel("~/GitHub/edna-r-pbi-exploration/data/housing.xlsx")
library(readxl)
housing <- read_excel("GitHub/edna-r-pbi-exploration/data/housing.xlsx")
View(housing)
library(tidyverse)
crimes <- read_csv('C:/RFiles/chicago-crimes.csv')
head(crimes)
write_rds(crimes, "C:/RFiles/crimes.rds")
library(data.table)
crimes <- fread("C:/RFiles/chicago-crimes.csv")
crimes
library('microbenchmark')
install.packages('microbenchmark')
library('microbenchmark')
library(tidyverse)
library(data.table)
library(tidyverse)
df <- 'C:/RFiles/chicago-crimes.csv'
library('microbenchmark')
microbenchmark(read.csv(df),
read_csv(df),
fread(df),
times = 10)
microbenchmark(read.csv(df),
read_csv(df),
fread(df))
dt <- system.time(fread(df))
dt
system.time(read_csv(df))
list.files()
library(tidyverse)
list.files() %>%
as_tibble()
list.files() %>%
as_tibble() %>%
sample_n(1)
list.files() %>%
as_tibble() %>%
sample_n(1)
setwd("~/GitHub/stringfest-resource-library/memes")
library(tidyverse)
list.files() %>%
as_tibble() %>%
sample_n(1)
list.files() %>%
as_tibble() %>%
sample_n(1)
library(AER)
data(package = 'AER')
BankWages
data(BankWages)
head(BankWages)
BankWages
head(CollegeDistance)
data("CollegeDistance")
head(CollegeDistance)
writexl::write_xlsx(CollegeDistance, "C:/RFiles/college_distance.xlsx")
library(Ecdat)
writexl::write_xlsx(Workinghours, "C:/RFiles/working_hours.xlsx")
library(Ecdat)
writexl::write_xlsx(Workinghours, "C:/RFiles/working_hours.xlsx")
data(Equipment)
head(Equipment)
data(Fertility)
head(Fertility)
head(HMDA)
data(HMDA)
head(HMDA)
data(HealthInsurance)
head(HealthInsurance)
data(MASchools)
head(MASchools)
data(MotorCycles)
head(MotorCycles)
data("Mortgage")
head(Mortgage)
library(writexl)
write_xlsx(Mortgage, "C:/RFiles/mortgage.xlsx")
data(Parade2005)
head(Parade2005)
write_xlsx(Parade2005, "C:/RFiles/parade2005.xlsx")
data("PepperPrice")
head(Parade2005)
head(PepperPrice)
data(ProgramEffectiveness)
head(ProgramEffectiveness)
write_xlsx(ProgramEffectiveness, "C:/RFiles/ProgramEffectiveness.xlsx")
data(RecreationDemand)
head(RecreationDemand)
data(ResumeNames)
head(ResumeNames)
head(ShipAccidents)
data(ShipAccidents)
head(ShipAccidents)
data(SmokeBan)
head(SmokeBan)
data(SportsCards)
head(SportsCards)
write_xlsx(SportsCards, "C:/RFiles/sports_cards.xlsx")
data(TeachingRatings)
head(TeachingRatings)
data(TravelMode )
head(TravelMode)
write_xlsx(TravelMode, "C:/RFiles/travel_mode.xlsx")
data("WeakInstrument")
head(USSeatBelts)
head(WeakInstrument)
data(USSeatBelts)
head(USSeatBelts)
write_xlsx(USSeatBelts, "C:/RFiles/seat_belts.xlsx")
library(readxl)
read_excel('https://raw.githubusercontent.com/MatthewAlanHaworth/Thinkful-Projects-Capstone-III/main/Health_insurance.csv') %>% write_xlsx('C:/RFiles/health_insurance.xlsx')
read_csv('https://raw.githubusercontent.com/MatthewAlanHaworth/Thinkful-Projects-Capstone-III/main/Health_insurance.csv') %>% write_xlsx('C:/RFiles/health_insurance.xlsx')
library(taskscheduleR)
browseVignettes(package = 'taskscheduleR')
myscript <- system.file("extdata", "helloworld.R", package = "taskscheduleR")
reprex:::reprex_addin()
taskscheduleR:::taskschedulerAddin()
taskscheduleR:::taskschedulerAddin()
install.packages('weathercan')
install.packages("weathercan", repos = "https://ropensci.r-universe.dev")
stations_search("Kamloops", interval = "hour")
library(weathercan)
# install.packages("weathercan", repos = "https://ropensci.r-universe.dev")
library(weathercan)
stations_search("Kamloops", interval = "hour")
kam <- weather_dl(station_ids = 51423, start = "2018-02-01", end = "2018-04-15")
kam <- weather_dl(station_ids = 51423, start = "2018-02-01", end = "2018-04-15")
kam
View(kam)
stations_search("Port Stanley", interval = "hour")
stations_search("PortStanley", interval = "hour")
stations_search("Stanley", interval = "hour")
stations_search("London", interval = "hour")
stations_search("Thomas", interval = "hour")
London
stations_search("London", interval = "hour")
# Let's find a location
stations_search("Windsor", interval = "hour")
readClipboard()
library(clipr)
read_clip()
x <- read_clip()
x
df <- read_clip_tbl()
df
library(tidyverse)
write_rds(df, "C:/RFiles/df.rds")
df
df$Z <- 'HELLO WORLD'
df
write_rds(df, "C:/RFiles/df.rds")
# install.packages('ta)
library(taskscheduleR)
# Let's find a location
stations_search("Windsor", interval = "hour")
Sys.Date()
?weather_dl
# Get yesterday's date
yesterday <-
Sys.Date()
# Get yesterday's date
yesterday <-
Sys.Date()
Sys.Date()
Sys.Date() - 1
# Get yesterday's date
yesterday <- Sys.Date() - 1
weather_df <- weather_dl(station_ids = 4716, start = yesterday, end = yesterday, interval = 'hour')
View(weather_df)
# Get yesterday's date
yesterday <- format(Sys.Date() - 1, '%m%d%Y')
weather_df <- weather_dl(station_ids = 4716, start = yesterday, end = yesterday, interval = 'hour')
View(weather_df)
# Get yesterday's date
yesterday <- Sys.Date() - 1
weather_df <- weather_dl(station_ids = 51423, start = yesterday, end = yesterday, interval = 'hour')
View(weather_df)
# Let's find a location
stations_search("Windsor", interval = "hour")
weather_df <- weather_dl(station_ids = 54738, start = yesterday, end = yesterday, interval = 'hour')
View(weather_df)
View(weather_df)
weather_df <- weather_dl(station_ids = 54738, start = yesterday, end = yesterday, interval = 'hour') %>%
select(-c(station_name:TC_id))
head(weather_df)
taskscheduleR:::taskschedulerAddin()
taskscheduleR:::taskschedulerAddin()
taskscheduleR:::taskschedulerAddin()
taskscheduleR:::taskschedulerAddin()
setwd("~/GitHub/stringfest-resource-library/memes")
setwd("~/GitHub/stringfest-resource-library/memes")
source("C:/Users/georg/Documents/GitHub/stringfest-resource-library/memes/random-file.R", echo=TRUE)
library(tidyverse)
list.files() %>%
as_tibble() %>%
sample_n(1)
list.files() %>%
as_tibble() %>%
sample_n(1)
